@mixin transparent($color, $alpha) {
  $rgba: rgba($color, $alpha);
  $ie-hex-str: ie-hex-str($rgba);
  background-color: transparent;
  background-color: $rgba;
  filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#{$ie-hex-str},endColorstr=#{$ie-hex-str});
  zoom: 1;
}

// Enter a base pixel size in px (without the px)
$base-font-size: $FS_CONTENT;

@function strip-unit($number) {
  @return $number / ($number * 0 + 1);
}

@function U($target, $context: $base-font-size) {
  @if strip-unit($target) == 0 { @return 0 }
  @return strip-unit($target) / strip-unit($context) * 1em;
}

@function U4($target1, $target2, $target3, $target4, $context: $base-font-size) {
  @return U($target1, $context) U($target2, $context) U($target3, $context) U($target4, $context);
}

@function px($val){
  @return strip-unit($val) * 1px;
}

@function percentage_to_float($percentage){
  @return strip-unit($percentage / 100%);
}

@function float_to_percentage($float){
  @return 100% * strip-unit($float);
}


@mixin rem-fallback($property, $values...) {
  $max: length($values);
  $pxValues: '';
  $remValues: '';

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $pxValues: #{$pxValues + $value*10}px;

    @if $i < $max {
      $pxValues: #{$pxValues + " "};
    }
  }

  @for $i from 1 through $max {
    $value: strip-unit(nth($values, $i));
    $remValues: #{$remValues + $value}rem;

    @if $i < $max {
      $remValues: #{$remValues + " "};
    }
  }

  #{$property}: $pxValues;
  #{$property}: $remValues;
}

//////////////////////////////////////////////////////////////////////////////////////////////////
/* Webfont-Icons */

/* Mixin fÃ¼r WebFont-Icons */
@mixin fontIcon($icon){
  font-family: $fontIconFontFamily;
  @include rem-fallback(font-size, nth(nth($icon,2),1));
  color: nth(nth($icon,2),2);

  $set: getIconCollection(nth($icon,1));
  content: nth($set,2);
}

/* Liefert den Code des betreffendaen Icons */
@function getIconCollection($icon){

  $set_for_use: nth($fontIconCollection,1);

  @for $i from 1 through length($fontIconCollection) {
    $set: nth($fontIconCollection, $i);

    @if ( nth($set,1) == $icon){
      $set_for_use: $set;
    }
  }
  @return($set_for_use);
}
//////////////////////////////////////////////////////////////////////////////////////////////////


